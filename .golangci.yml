linters:
  enable:
    # Default linters plus these:
    - contextcheck # [-] Checks whether the function uses a non-inherited context
    - exhaustive # [+] Checks exhaustiveness of enum switch statements
    - exportloopref # [-] Checks for pointers to enclosing loop variables
    - gci # [+] Checks package import order and makes it always deterministic
    - goconst # [+] Checks for repeated strings that could be replaced by a constant
    - gofmt # [+] Checks whether code was gofmt-ed
    - mnd # [+] Checks for magic numbers
    - nilerr # [+] Finds the code that returns nil even if it checks that the error is not nil
    - perfsprint # [+] Checks for fmt.Sprintf calls, that can be replaced with a faster alternative
    - prealloc # [+] Checks for slice declarations that could potentially be pre-allocated
    - testifylint # [+] Checks usage of github.com/stretchr/testify
    - thelper # [+] Checks for test helpers which do not start with t.Helper()
    - unconvert # [+] Checks for unnecessary type conversions 
    - paralleltest # [+] Check for t.Parallel() calls
    - revive # [+] Metalinter
linters-settings:
  exhaustive:
    # Program elements to check for exhaustiveness.
    check:
      - switch
      - map
    # Check switch statements in generated files also.
    check-generated: true
    # Presence of "default" case in switch statements satisfies exhaustiveness,
    # even if all enum members are not listed.
    default-signifies-exhaustive: true
    # Enum members matching the supplied regex do not have to be listed in
    # switch statements to satisfy exhaustiveness.
    ignore-enum-members: ""
    # Enum types matching the supplied regex do not have to be listed in
    # switch statements to satisfy exhaustiveness.
    ignore-enum-types: ""
    # Consider enums only in package scopes, not in inner scopes.
    package-scope-only: true
    # Only run exhaustive check on switches with "//exhaustive:enforce" comment.
    explicit-exhaustive-switch: false
    # Only run exhaustive check on map literals with "//exhaustive:enforce" comment.
    explicit-exhaustive-map: false
    # Switch statement requires default case even if exhaustive.
    default-case-required: true
  gci:
    # Section configuration to compare against.
    # Section names are case-insensitive and may contain parameters in ().
    # The default order of sections is `standard > default > custom > blank > dot > alias`,
    # If `custom-order` is `true`, it follows the order of `sections` option.
    sections:
      - standard # Standard section: captures all standard packages.
      - default # Default section: contains all imports that could not be matched to another section type.
      - blank # Blank section: contains all blank imports. This section is not present unless explicitly enabled.
      - dot # Dot section: contains all dot imports. This section is not present unless explicitly enabled.
    # Skip generated files.
    skip-generated: false
    # Enable custom order of sections.
    # If `true`, make the section order the same as the order of `sections`.
    custom-order: true
  goconst:
    # Minimal length of string constant.
    min-len: 3
    # Minimum occurrences of constant.
    min-occurrences: 3
    # Ignore test files.
    ignore-tests: true
    # Look for existing constants matching the values.
    match-constant: true
    # Search also for duplicated numbers.
    numbers: false
    # Minimum value, only works with goconst.numbers
    min: 2
    # Maximum value, only works with goconst.numbers
    max: 2
    # Ignore when constant is not used as function argument.
    ignore-calls: false
    # Exclude strings matching the given regular expression.
    ignore-strings: ""
  gofmt:
    # Simplify code: gofmt with `-s` option.
    simplify: true
    # Apply the rewrite rules to the source before reformatting.
    # https://pkg.go.dev/cmd/gofmt
    rewrite-rules:
      - pattern: 'interface{}'
        replacement: 'any'
      - pattern: 'a[b:len(a)]'
        replacement: 'a[b:]'
  mnd:
    checks:
      - argument
      - case
      - condition
      - operation
      - return
      # - assign # triggers for fields like: `statusCode: 200`
  perfsprint:
    # Optimizes even if it requires an int or uint type cast.
    int-conversion: false
    # Optimizes into `err.Error()` even if it is only equivalent for non-nil errors.
    err-error: true
    # Optimizes `fmt.Errorf`.
    errorf: true
    # Optimizes `fmt.Sprintf` with only one argument
    sprintf1: true
  prealloc:
    # Report pre-allocation suggestions only on simple loops that have no returns/breaks/continues/gotos in them.
    simple: false
    # Report pre-allocation suggestions on range loops.
    range-loops: true
    # Report pre-allocation suggestions on for loops.
    for-loops: true
  testifylint:
    # Enable all checkers (https://github.com/Antonboom/testifylint#checkers).
    enable-all: true
  thelper:
    test:
      # Check *testing.T is first param (or after context.Context) of helper function.
      first: true
      # Check *testing.T param has name t.
      name: true
      # Check t.Helper() begins helper function.
      begin: true
    benchmark:
      # Check *testing.B is first param (or after context.Context) of helper function.
      first: true
      # Check *testing.B param has name b.
      name: true
      # Check b.Helper() begins helper function.
      begin: true
    tb:
      # Check *testing.TB is first param (or after context.Context) of helper function.
      first: true
      # Check *testing.TB param has name tb.
      name: true
      # Check tb.Helper() begins helper function.
      begin: true
    fuzz:
      # Check *testing.F is first param (or after context.Context) of helper function.
      first: true
      # Check *testing.F param has name f.
      name: true
      # Check f.Helper() begins helper function.
      begin: true
  revive:
    ignore-generated-header: true
    severity: warning
    enable-all-rules: true
    confidence: 0.8
    # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md
    rules:
      - name: add-constant
        disabled: true # goconst does it better
      - name: line-length-limit
        severity: warning
        arguments: [100]
      - name: function-length
        disabled: true
      - name: cognitive-complexity
        disabled: true
      - name: line-length-limit
        disabled: true
run:
  timeout: 3m
  tests: true
output:
  formats:
    - format: colored-line-number
      path: stdout
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: false
  sort-results: true
